@using AQS_Application.Dtos.BaseServiceDto.BlogDtos
@model BlogReadAdminDto
@{
    Layout = "~/Areas/Admin/Views/Shared/_layout.cshtml";
}
@section CSS
{
    <style>
        .prevImage {
            width: 100%;
            height: 100%;
        }
    </style>
}
<div class="container-fluid">
    <div class="pageName">
        <span class="textPage">
            <a asp-area="Admin" asp-controller="Blog" asp-action="BlogList">
                لیست خبرها
            </a>
            > تعریف/ویرایش خبرها
        </span>
    </div>
    @if (ViewData["error"] is not null)
    {
        <div class="row">
            <p style="color:red;">@ViewData["error"].ToString()</p>
        </div>
    }
    <div class="row">
        <a href="#" id="save"><img class="img-Icon" src="~/images/diskette copy.png" /></a>
        <a href="@Url.Action("BlogList","Blog")" id="cancle"><img class="img-Icon" src="~/images/cancel.png" /></a>
    </div>
    <form id="saveForm" asp-area="Admin" asp-controller="Blog" asp-action="Save" enctype="multipart/form-data" method="post">
        <div class="row">
            <div class="form-group row">
                <label class="col-sm-1 col-form-label input-Label">عنوان خبر:</label>
                <div class="col-sm-7">
                    <input asp-for="Subject" type="text" class="input-text">
                </div>
            </div>
            <div class="form-group row">
                <label class="col-sm-1 col-form-label input-Label">شرح خبر:</label>
                <div class="col-sm-7">
                    <textarea id="div_editor1" name="content" >@Html.Raw(ViewBag.BlogContent)</textarea>
                </div>
            </div>
            
            <div class="form-group row my-4" style="margin-top:30px;">
                <!-- video -->
                <div class="col-sm-6 uploadDiv">
                    <div class="col-sm-4 upBtn">
                        <button type="button" class="btn btn-submit btnUpload" onclick="document.getElementById('blogvid').click();">بارگذاری ویدیو </button>
                        <input type="file" id="blogvid" name="blogvid" style="display:none" accept="video/*" onchange="showFileName(this, 'videoPreview1')" />
                    </div>
                    <div class="col-sm-6" style="display: flex; align-items: center;">

                        <video src="@Model.VideoFileName" muted id="videoPreview1" controls style="width: 70%; height: 120px;">

                            مرورگر شما از پخش ویدیو پشتیبانی نمی‌کند.
                        </video>
                        <div class="col-md-4 upBtn" style="margin-left: 10px;">
                            @if(string.IsNullOrEmpty(Model.VideoFileName))
                            {
                                <a onclick="removeVideo(this)">
                                    <img class="img-Icon" src="~/images/recycle.png" />
                                </a>
                            }
                            else
                            {
                                <a href="@Url.Action("DeleteVideo","Blog",new{blogId=Model.Id})" onclick="removeVideo(this)">
                                    <img class="img-Icon" src="~/images/recycle.png" />
                                </a>
                            }

                        </div>
                    </div>
                </div>
                <!-- headerPicture -->
                <div class="col-sm-6">
                    <div class="col-sm-4 upBtn">
                        <button type="button" class="btn-submit btnUpload" onclick="getHeaderPic()">بارگذاری تصویر خبر</button>
                        <input id="headerPic" name="HeaderPictureFileName" style="display:none" class="form-control-file" type="file" accept="image/*">
                    </div>
                    <div class="col-sm-6" style="display: flex; align-items: center;">
                        <div id="headerPreview" class=" ShowPic">
                            @if (!string.IsNullOrEmpty(Model.PreviousHeaderRout))
                            {
                                <img class="prevImage" src="@Model.PreviousHeaderRout" />
                            }
                        </div>
                        <div class="col-md-2 upBtn" style="margin-left: 10px;">
                            @if (string.IsNullOrEmpty(Model.PreviousHeaderRout))
                            {
                                <a onclick="removeHeader(this)">
                                    <img class="img-Icon" src="~/images/recycle.png" />
                                </a>
                            }
                            else{
                                <a href="@Url.Action("DeletePictureHeader","Blog",new{blogId=Model.Id})" onclick="removeHeader(this)">
                                    <img class="img-Icon" src="~/images/recycle.png" />
                                </a>
                            }

                        </div>
                    </div>
                </div>
            </div>


            <!-- video -->
            <!--pictures -->
            <div class="form-group row" style="margin-top:30px;">
                <div class="col-sm-2 upBtn">
                    <button type="button" class="btn-submit btnUpload" onclick="getfile()">بارگذاری تصویر</button>
                    <input multiple id="getFile" style="display:none" class="form-control-file" type="file" accept="image/*">
                </div>
                <div id="preview" class="col-sm-2 ShowPic"></div>
                <div class="col-sm-4 ">
                    <button type="button" class="btn btn-submit btnUpload" onclick="addPicture()" id="new">افزودن به جدول</button>
                </div>
                <input id="IsHeaderChanged" hidden value="false" name="IsHeaderChanged" />
            </div>
            <input hidden asp-for="Id" />
            <input hidden asp-for="PreviousHeaderRout" />
            <input hidden asp-for="VideoFileName" />
        </div>
        <div class="row">
            <table id="myTable" class="display tbStyle">
                <thead>
                    <tr>
                        <th>ردیف</th>
                        <th>تصویر بارگذاری شده</th>
                        <th>حذف</th>
                    </tr>
                </thead>
                <tbody>
                    @{
                        if (Model.BlogPictures != null)
                        {
                            int rowNum = 1;
                            foreach (var item in Model.BlogPictures)
                            {
                                <tr>
                                    <td class="td-Icon">@(rowNum++)</td>
                                    <td><img class="img img-fluid" src="@item.Route" style="width:30px;height:30px;" /></td>
                                    <td class="td-Icon"><a href="@Url.Action("DeletePicture","Blog",new{pictureId=item.Id,blogId=item.BlogId})"><img class="img-Icon" src="~/images/recycle.png" /></a></td>
                                </tr>
                            }
                        }
                    }
                </tbody>
            </table>

        </div>
    </form>
</div>
<img hidden id="deleteIcon" class="img-Icon" src="~/images/recycle.png" />
@section Scripts
{
    <script>

        var editor1 = new RichTextEditor("#div_editor1");

        function getPic () 
        {
            document.querySelector('#getPic').click();
        }
        function getVideo ()
        {
            $('#getVideo').click();
        }
        function getfile () 
        {
            document.querySelector('#getFile').click();
        }

        function getHeaderPic()
        {
            $("#headerPic").click();
        }

        $('#myTable').DataTable
        ({
            language: {
                "emptyTable": "هیچ داده‌ای در جدول وجود ندارد",
                "info": "نمایش _START_ تا _END_ از _TOTAL_ رکورد",
                "infoEmpty": "نمایش 0 تا 0 از 0 رکورد",
                "infoFiltered": "(فیلتر شده از _MAX_ رکورد)",
                "lengthMenu": "نمایش _MENU_ رکورد در هر صفحه",
                "loadingRecords": "در حال بارگذاری...",
                "processing": "در حال پردازش...",
                "search": "جستجو:",
                "zeroRecords": "رکوردی با این مشخصات پیدا نشد",
                "paginate": {
                    "first": "اولین",
                    "last": "آخرین",
                    "next": "بعدی",
                    "previous": "قبلی"
                },
                "aria": {
                    "sortAscending": ": فعال‌سازی مرتب‌سازی صعودی",
                    "sortDescending": ": فعال‌سازی مرتب‌سازی نزولی"
                }}
            });

        var rowCount = @(Model.BlogPictures != null ? Model.BlogPictures.Count : 0);
        const fileArray = []; // آرایه برای نگهداری فایل‌ها

        function addPicture()
        {
            const files = $("#getFile")[0].files;

            if (!files || files.length === 0) {
                alert("لطفاً یک تصویر انتخاب کنید!");
                return;
            }

            const deleteIcon = $("#deleteIcon").attr('src');

            Array.from(files).forEach((file)=>{
                const fileIndex = fileArray.length;
                fileArray.push(file); // افزودن فایل به آرایه
                const reader = new FileReader();
                reader.onload = function (e) {
                    if(rowCount===0){
                        $("#myTable tbody").empty();
                    }
                    rowCount++; // افزایش شمارنده ردیف‌ها

                    // ساخت ردیف جدید
                    const newRow = `
                        <tr data-index="${fileIndex}">
                            <td class="td-Icon">${rowCount}</td>
                            <td><img class="img img-fluid" src="${e.target.result}" style="width:30px;height:30px;" /></td>
                            <td class="td-Icon"><a data-index="${fileIndex}" onclick="DeletePic(this)"><img class="img-Icon" src="${deleteIcon}" /></a></td>
                        </tr>
                    `;

                    // اضافه کردن ردیف به جدول
                    $("#myTable tbody").append(newRow);
                };

            // خواندن فایل به صورت URL داده‌ای
                reader.readAsDataURL(file);
            });

        }

        function DeletePic(item){
            const fileIndex = $(item).data("index"); // گرفتن اندیس فایل از دکمه
            fileArray[fileIndex] = null; // حذف فایل از آرایه (با مقدار null)

            // حذف ردیف از جدول
            $(item).closest("tr").remove();
        }

        $("#getFile").on('change',function(){
            const file = this.files[0];

            if (file) {
                const reader = new FileReader();
                reader.onload = function (e) {
                    // ایجاد یا جایگزینی تصویر در باکس
                    const img = $("<img>")
                    .attr("src", e.target.result)
                    .addClass("img")
                    .addClass("prevImage");

                    $("#preview").empty().append(img);
                };
                reader.readAsDataURL(file);

            } else {
                $("#preview").html("پیش‌نمایش");
            }
        });

        $("#headerPic").on('change',function(){
            const file = this.files[0];

            if (file) {
                const reader = new FileReader();
                reader.onload = function (e) {
                    // ایجاد یا جایگزینی تصویر در باکس
                    const img = $("<img>")
                    .attr("src", e.target.result)
                    .addClass("img")
                    .addClass("prevImage");

                    $("#headerPreview").empty().append(img);
                };
                reader.readAsDataURL(file);

                $("#IsHeaderChanged").val(true);

            } else {
                $("#headerPreview").html("پیش‌نمایش");
            }
        });

        $("#save").click(function(event){
            event.preventDefault();
            $("#saveForm").submit();
        });

        $("#saveForm").submit(function () {
            // اضافه کردن فایل‌ها به فرم
            fileArray.forEach((file, index) => {
                if(file!=null)
                {
                    const fileInput = $('<input>')
                    .attr('type', 'file')
                    .attr('name', `PictureFileName`)
                    .addClass('hiddenFileInput');

                    const dataTransfer = new DataTransfer();
                    dataTransfer.items.add(file);
                    fileInput[0].files = dataTransfer.files;

                    $(this).append(fileInput);
                }
            });
        });

        //video
        function showFileName(input, labelId) 
        {
            if (input.files && input.files[0]) 
            {
                const videoFile = input.files[0]; // فایل انتخاب شده توسط کاربر
                const videoPreview = document.getElementById(labelId); // دریافت عنصر ویدئو
                if (videoFile)
                {
                    const fileURL = URL.createObjectURL(videoFile); // ایجاد URL موقت از فایل
                    videoPreview.src = fileURL; // تنظیم URL به عنوان منبع ویدیو
                    videoPreview.load(); // بارگذاری ویدیو

                    // رویداد timeupdate برای کنترل حلقه ۵ ثانیه‌ای
                    $(videoPreview).on('timeupdate', function () {
                        if (videoPreview.currentTime >= 5) {
                            videoPreview.currentTime = 0; // بازگشت به ثانیه ۰
                            videoPreview.play(); // شروع دوباره پخش
                        }
                    });

                    videoPreview.play(); // شروع پخش خودکار
                }

            }
        }

        function removeVideo(button) 
        {
            const parent = $(button).closest(".uploadDiv");
            if(parent)
            {
                const video = parent.find("video");
                if(video)
                {
                    $(video).attr('src', ''); // حذف منبع ویدئو
                    // $(video).load(); // بازنشانی ویدئو
                }
                const input = parent.find("input");
                if(input)
                {
                    $(input).val("");
                }
            }
        }

        function removeHeader(button)
        {
            $("#headerPic").val("");
            $("#headerPreview").empty();
        }


         // تغییرات در بارگذاری تصویر هدر
        // تغییرات در بارگذاری تصویر هدر
        $("#headerPicture").on('change', function () 
        {
            const file = this.files[0];

            if (file) {
                const reader = new FileReader();
                reader.onload = function (e) {
                    $("#headerPreview").html('<img src="' + e.target.result + '" class="img img-fluid prevImage" style="width: 100px; height: 100px;" />');
                    $("#headerPreview").append('<a href="javascript:void(0)" onclick="removeHeaderImage()" class="col-md-4 upBtn" style="margin-left: 10px;"><img class="img-Icon" src="~/images/recycle.png" /></a>');
                };
                reader.readAsDataURL(file);
            }
        });

        // حذف تصویر هدر
        function removeHeaderImage() {
            $("#headerPicture").val(""); // پاک کردن فایل از ورودی
            $("#headerPreview").html(""); // پاک کردن پیش‌نمایش تصویر
        }


    </script>

   

}